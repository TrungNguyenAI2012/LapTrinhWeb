#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Universal.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Universal")]
	public partial class dbQLUniversalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaiViet(BaiViet instance);
    partial void UpdateBaiViet(BaiViet instance);
    partial void DeleteBaiViet(BaiViet instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertNhanXet(NhanXet instance);
    partial void UpdateNhanXet(NhanXet instance);
    partial void DeleteNhanXet(NhanXet instance);
    partial void InsertNhomTK(NhomTK instance);
    partial void UpdateNhomTK(NhomTK instance);
    partial void DeleteNhomTK(NhomTK instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertThanhVien(ThanhVien instance);
    partial void UpdateThanhVien(ThanhVien instance);
    partial void DeleteThanhVien(ThanhVien instance);
    partial void InsertThe(The instance);
    partial void UpdateThe(The instance);
    partial void DeleteThe(The instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    partial void InsertThuongHieu(ThuongHieu instance);
    partial void UpdateThuongHieu(ThuongHieu instance);
    partial void DeleteThuongHieu(ThuongHieu instance);
    partial void InsertCTHD(CTHD instance);
    partial void UpdateCTHD(CTHD instance);
    partial void DeleteCTHD(CTHD instance);
    #endregion
		
		public dbQLUniversalDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["UniversalConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLUniversalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLUniversalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLUniversalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLUniversalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BaiViet> BaiViets
		{
			get
			{
				return this.GetTable<BaiViet>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<NhanXet> NhanXets
		{
			get
			{
				return this.GetTable<NhanXet>();
			}
		}
		
		public System.Data.Linq.Table<NhomTK> NhomTKs
		{
			get
			{
				return this.GetTable<NhomTK>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<ThanhVien> ThanhViens
		{
			get
			{
				return this.GetTable<ThanhVien>();
			}
		}
		
		public System.Data.Linq.Table<The> Thes
		{
			get
			{
				return this.GetTable<The>();
			}
		}
		
		public System.Data.Linq.Table<The_BV> The_BVs
		{
			get
			{
				return this.GetTable<The_BV>();
			}
		}
		
		public System.Data.Linq.Table<The_SP> The_SPs
		{
			get
			{
				return this.GetTable<The_SP>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
		
		public System.Data.Linq.Table<ThuongHieu> ThuongHieus
		{
			get
			{
				return this.GetTable<ThuongHieu>();
			}
		}
		
		public System.Data.Linq.Table<CTHD> CTHDs
		{
			get
			{
				return this.GetTable<CTHD>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiViet")]
	public partial class BaiViet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBV;
		
		private string _TenBV;
		
		private string _DDHinh;
		
		private string _TomTat;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
		private string _NoiDung;
		
		private bool _DaDuyet;
		
		private string _TaiKhoan;
		
		private string _MaLoai;
		
		private EntitySet<NhanXet> _NhanXets;
		
		private EntityRef<ThanhVien> _ThanhVien;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBVChanging(string value);
    partial void OnMaBVChanged();
    partial void OnTenBVChanging(string value);
    partial void OnTenBVChanged();
    partial void OnDDHinhChanging(string value);
    partial void OnDDHinhChanged();
    partial void OnTomTatChanging(string value);
    partial void OnTomTatChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnDaDuyetChanging(bool value);
    partial void OnDaDuyetChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    #endregion
		
		public BaiViet()
		{
			this._NhanXets = new EntitySet<NhanXet>(new Action<NhanXet>(this.attach_NhanXets), new Action<NhanXet>(this.detach_NhanXets));
			this._ThanhVien = default(EntityRef<ThanhVien>);
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBV", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBV
		{
			get
			{
				return this._MaBV;
			}
			set
			{
				if ((this._MaBV != value))
				{
					this.OnMaBVChanging(value);
					this.SendPropertyChanging();
					this._MaBV = value;
					this.SendPropertyChanged("MaBV");
					this.OnMaBVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBV", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string TenBV
		{
			get
			{
				return this._TenBV;
			}
			set
			{
				if ((this._TenBV != value))
				{
					this.OnTenBVChanging(value);
					this.SendPropertyChanging();
					this._TenBV = value;
					this.SendPropertyChanged("TenBV");
					this.OnTenBVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDHinh", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DDHinh
		{
			get
			{
				return this._DDHinh;
			}
			set
			{
				if ((this._DDHinh != value))
				{
					this.OnDDHinhChanging(value);
					this.SendPropertyChanging();
					this._DDHinh = value;
					this.SendPropertyChanged("DDHinh");
					this.OnDDHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TomTat", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string TomTat
		{
			get
			{
				return this._TomTat;
			}
			set
			{
				if ((this._TomTat != value))
				{
					this.OnTomTatChanging(value);
					this.SendPropertyChanging();
					this._TomTat = value;
					this.SendPropertyChanged("TomTat");
					this.OnTomTatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaDuyet", DbType="Bit NOT NULL")]
		public bool DaDuyet
		{
			get
			{
				return this._DaDuyet;
			}
			set
			{
				if ((this._DaDuyet != value))
				{
					this.OnDaDuyetChanging(value);
					this.SendPropertyChanging();
					this._DaDuyet = value;
					this.SendPropertyChanged("DaDuyet");
					this.OnDaDuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					if (this._ThanhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_NhanXet", Storage="_NhanXets", ThisKey="MaBV", OtherKey="MaBV")]
		public EntitySet<NhanXet> NhanXets
		{
			get
			{
				return this._NhanXets;
			}
			set
			{
				this._NhanXets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhVien_BaiViet", Storage="_ThanhVien", ThisKey="TaiKhoan", OtherKey="TaiKhoan", IsForeignKey=true)]
		public ThanhVien ThanhVien
		{
			get
			{
				return this._ThanhVien.Entity;
			}
			set
			{
				ThanhVien previousValue = this._ThanhVien.Entity;
				if (((previousValue != value) 
							|| (this._ThanhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThanhVien.Entity = null;
						previousValue.BaiViets.Remove(this);
					}
					this._ThanhVien.Entity = value;
					if ((value != null))
					{
						value.BaiViets.Add(this);
						this._TaiKhoan = value.TaiKhoan;
					}
					else
					{
						this._TaiKhoan = default(string);
					}
					this.SendPropertyChanged("ThanhVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_BaiViet", Storage="_TheLoai", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.BaiViets.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.BaiViets.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanXets(NhanXet entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = this;
		}
		
		private void detach_NhanXets(NhanXet entity)
		{
			this.SendPropertyChanging();
			entity.BaiViet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoDH;
		
		private string _TaiKhoan;
		
		private System.DateTime _NgayDat;
		
		private System.Nullable<System.DateTime> _NgayGiao;
		
		private string _DiaChiGiao;
		
		private string _GhiChu;
		
		private string _TrangThaiDH;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<ThanhVien> _ThanhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoDHChanging(string value);
    partial void OnSoDHChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnNgayDatChanging(System.DateTime value);
    partial void OnNgayDatChanged();
    partial void OnNgayGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoChanged();
    partial void OnDiaChiGiaoChanging(string value);
    partial void OnDiaChiGiaoChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTrangThaiDHChanging(string value);
    partial void OnTrangThaiDHChanged();
    #endregion
		
		public DonHang()
		{
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._ThanhVien = default(EntityRef<ThanhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDH", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoDH
		{
			get
			{
				return this._SoDH;
			}
			set
			{
				if ((this._SoDH != value))
				{
					this.OnSoDHChanging(value);
					this.SendPropertyChanging();
					this._SoDH = value;
					this.SendPropertyChanged("SoDH");
					this.OnSoDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					if (this._ThanhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="DateTime NOT NULL")]
		public System.DateTime NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiGiao", DbType="NVarChar(50)")]
		public string DiaChiGiao
		{
			get
			{
				return this._DiaChiGiao;
			}
			set
			{
				if ((this._DiaChiGiao != value))
				{
					this.OnDiaChiGiaoChanging(value);
					this.SendPropertyChanging();
					this._DiaChiGiao = value;
					this.SendPropertyChanged("DiaChiGiao");
					this.OnDiaChiGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiDH", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TrangThaiDH
		{
			get
			{
				return this._TrangThaiDH;
			}
			set
			{
				if ((this._TrangThaiDH != value))
				{
					this.OnTrangThaiDHChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiDH = value;
					this.SendPropertyChanged("TrangThaiDH");
					this.OnTrangThaiDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_CTHD1", Storage="_CTHDs", ThisKey="SoDH", OtherKey="SoDH")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhVien_DonHang", Storage="_ThanhVien", ThisKey="TaiKhoan", OtherKey="TaiKhoan", IsForeignKey=true)]
		public ThanhVien ThanhVien
		{
			get
			{
				return this._ThanhVien.Entity;
			}
			set
			{
				ThanhVien previousValue = this._ThanhVien.Entity;
				if (((previousValue != value) 
							|| (this._ThanhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThanhVien.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._ThanhVien.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._TaiKhoan = value.TaiKhoan;
					}
					else
					{
						this._TaiKhoan = default(string);
					}
					this.SendPropertyChanged("ThanhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanXet")]
	public partial class NhanXet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNX;
		
		private string _MaBV;
		
		private string _TaiKhoan;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
		private string _NoiDung;
		
		private EntityRef<BaiViet> _BaiViet;
		
		private EntityRef<ThanhVien> _ThanhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNXChanging(string value);
    partial void OnMaNXChanged();
    partial void OnMaBVChanging(string value);
    partial void OnMaBVChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    #endregion
		
		public NhanXet()
		{
			this._BaiViet = default(EntityRef<BaiViet>);
			this._ThanhVien = default(EntityRef<ThanhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNX", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNX
		{
			get
			{
				return this._MaNX;
			}
			set
			{
				if ((this._MaNX != value))
				{
					this.OnMaNXChanging(value);
					this.SendPropertyChanging();
					this._MaNX = value;
					this.SendPropertyChanged("MaNX");
					this.OnMaNXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBV", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MaBV
		{
			get
			{
				return this._MaBV;
			}
			set
			{
				if ((this._MaBV != value))
				{
					if (this._BaiViet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBVChanging(value);
					this.SendPropertyChanging();
					this._MaBV = value;
					this.SendPropertyChanged("MaBV");
					this.OnMaBVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					if (this._ThanhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiViet_NhanXet", Storage="_BaiViet", ThisKey="MaBV", OtherKey="MaBV", IsForeignKey=true)]
		public BaiViet BaiViet
		{
			get
			{
				return this._BaiViet.Entity;
			}
			set
			{
				BaiViet previousValue = this._BaiViet.Entity;
				if (((previousValue != value) 
							|| (this._BaiViet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaiViet.Entity = null;
						previousValue.NhanXets.Remove(this);
					}
					this._BaiViet.Entity = value;
					if ((value != null))
					{
						value.NhanXets.Add(this);
						this._MaBV = value.MaBV;
					}
					else
					{
						this._MaBV = default(string);
					}
					this.SendPropertyChanged("BaiViet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhVien_NhanXet", Storage="_ThanhVien", ThisKey="TaiKhoan", OtherKey="TaiKhoan", IsForeignKey=true)]
		public ThanhVien ThanhVien
		{
			get
			{
				return this._ThanhVien.Entity;
			}
			set
			{
				ThanhVien previousValue = this._ThanhVien.Entity;
				if (((previousValue != value) 
							|| (this._ThanhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThanhVien.Entity = null;
						previousValue.NhanXets.Remove(this);
					}
					this._ThanhVien.Entity = value;
					if ((value != null))
					{
						value.NhanXets.Add(this);
						this._TaiKhoan = value.TaiKhoan;
					}
					else
					{
						this._TaiKhoan = default(string);
					}
					this.SendPropertyChanged("ThanhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomTK")]
	public partial class NhomTK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhom;
		
		private string _TenNhom;
		
		private string _GhiChu;
		
		private EntitySet<ThanhVien> _ThanhViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomChanging(string value);
    partial void OnMaNhomChanged();
    partial void OnTenNhomChanging(string value);
    partial void OnTenNhomChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public NhomTK()
		{
			this._ThanhViens = new EntitySet<ThanhVien>(new Action<ThanhVien>(this.attach_ThanhViens), new Action<ThanhVien>(this.detach_ThanhViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhom", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this.OnTenNhomChanging(value);
					this.SendPropertyChanging();
					this._TenNhom = value;
					this.SendPropertyChanged("TenNhom");
					this.OnTenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomTK_ThanhVien", Storage="_ThanhViens", ThisKey="MaNhom", OtherKey="MaNhom")]
		public EntitySet<ThanhVien> ThanhViens
		{
			get
			{
				return this._ThanhViens;
			}
			set
			{
				this._ThanhViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThanhViens(ThanhVien entity)
		{
			this.SendPropertyChanging();
			entity.NhomTK = this;
		}
		
		private void detach_ThanhViens(ThanhVien entity)
		{
			this.SendPropertyChanging();
			entity.NhomTK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private string _TenSP;
		
		private string _DDHinh;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
		private string _NoiDung;
		
		private double _GiaBan;
		
		private double _GiaGiam;
		
		private string _DVT;
		
		private bool _DaDuyet;
		
		private string _TaiKhoan;
		
		private string _MaLoai;
		
		private string _MaTH;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<ThanhVien> _ThanhVien;
		
		private EntityRef<TheLoai> _TheLoai;
		
		private EntityRef<ThuongHieu> _ThuongHieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnDDHinhChanging(string value);
    partial void OnDDHinhChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnGiaBanChanging(double value);
    partial void OnGiaBanChanged();
    partial void OnGiaGiamChanging(double value);
    partial void OnGiaGiamChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnDaDuyetChanging(bool value);
    partial void OnDaDuyetChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnMaTHChanging(string value);
    partial void OnMaTHChanged();
    #endregion
		
		public SanPham()
		{
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._ThanhVien = default(EntityRef<ThanhVien>);
			this._TheLoai = default(EntityRef<TheLoai>);
			this._ThuongHieu = default(EntityRef<ThuongHieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDHinh", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DDHinh
		{
			get
			{
				return this._DDHinh;
			}
			set
			{
				if ((this._DDHinh != value))
				{
					this.OnDDHinhChanging(value);
					this.SendPropertyChanging();
					this._DDHinh = value;
					this.SendPropertyChanged("DDHinh");
					this.OnDDHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Float NOT NULL")]
		public double GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaGiam", DbType="Float NOT NULL")]
		public double GiaGiam
		{
			get
			{
				return this._GiaGiam;
			}
			set
			{
				if ((this._GiaGiam != value))
				{
					this.OnGiaGiamChanging(value);
					this.SendPropertyChanging();
					this._GiaGiam = value;
					this.SendPropertyChanged("GiaGiam");
					this.OnGiaGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaDuyet", DbType="Bit NOT NULL")]
		public bool DaDuyet
		{
			get
			{
				return this._DaDuyet;
			}
			set
			{
				if ((this._DaDuyet != value))
				{
					this.OnDaDuyetChanging(value);
					this.SendPropertyChanging();
					this._DaDuyet = value;
					this.SendPropertyChanged("DaDuyet");
					this.OnDaDuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					if (this._ThanhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTH", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MaTH
		{
			get
			{
				return this._MaTH;
			}
			set
			{
				if ((this._MaTH != value))
				{
					if (this._ThuongHieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTHChanging(value);
					this.SendPropertyChanging();
					this._MaTH = value;
					this.SendPropertyChanged("MaTH");
					this.OnMaTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTHD1", Storage="_CTHDs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhVien_SanPham", Storage="_ThanhVien", ThisKey="TaiKhoan", OtherKey="TaiKhoan", IsForeignKey=true)]
		public ThanhVien ThanhVien
		{
			get
			{
				return this._ThanhVien.Entity;
			}
			set
			{
				ThanhVien previousValue = this._ThanhVien.Entity;
				if (((previousValue != value) 
							|| (this._ThanhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThanhVien.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._ThanhVien.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._TaiKhoan = value.TaiKhoan;
					}
					else
					{
						this._TaiKhoan = default(string);
					}
					this.SendPropertyChanged("ThanhVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_SanPham", Storage="_TheLoai", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_ThuongHieu", ThisKey="MaTH", OtherKey="MaTH", IsForeignKey=true)]
		public ThuongHieu ThuongHieu
		{
			get
			{
				return this._ThuongHieu.Entity;
			}
			set
			{
				ThuongHieu previousValue = this._ThuongHieu.Entity;
				if (((previousValue != value) 
							|| (this._ThuongHieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuongHieu.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._ThuongHieu.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaTH = value.MaTH;
					}
					else
					{
						this._MaTH = default(string);
					}
					this.SendPropertyChanged("ThuongHieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanhVien")]
	public partial class ThanhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _HoDemTV;
		
		private string _TenTV;
		
		private System.DateTime _NgaySinh;
		
		private bool _GioiTinh;
		
		private string _SDT;
		
		private string _Email;
		
		private string _DiaChi;
		
		private bool _TrangThai;
		
		private string _MaNhom;
		
		private EntitySet<BaiViet> _BaiViets;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<NhanXet> _NhanXets;
		
		private EntitySet<SanPham> _SanPhams;
		
		private EntityRef<NhomTK> _NhomTK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnHoDemTVChanging(string value);
    partial void OnHoDemTVChanged();
    partial void OnTenTVChanging(string value);
    partial void OnTenTVChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnTrangThaiChanging(bool value);
    partial void OnTrangThaiChanged();
    partial void OnMaNhomChanging(string value);
    partial void OnMaNhomChanged();
    #endregion
		
		public ThanhVien()
		{
			this._BaiViets = new EntitySet<BaiViet>(new Action<BaiViet>(this.attach_BaiViets), new Action<BaiViet>(this.detach_BaiViets));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._NhanXets = new EntitySet<NhanXet>(new Action<NhanXet>(this.attach_NhanXets), new Action<NhanXet>(this.detach_NhanXets));
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			this._NhomTK = default(EntityRef<NhomTK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoDemTV", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string HoDemTV
		{
			get
			{
				return this._HoDemTV;
			}
			set
			{
				if ((this._HoDemTV != value))
				{
					this.OnHoDemTVChanging(value);
					this.SendPropertyChanging();
					this._HoDemTV = value;
					this.SendPropertyChanged("HoDemTV");
					this.OnHoDemTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTV", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string TenTV
		{
			get
			{
				return this._TenTV;
			}
			set
			{
				if ((this._TenTV != value))
				{
					this.OnTenTVChanging(value);
					this.SendPropertyChanging();
					this._TenTV = value;
					this.SendPropertyChanged("TenTV");
					this.OnTenTVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit NOT NULL")]
		public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit NOT NULL")]
		public bool TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					if (this._NhomTK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhVien_BaiViet", Storage="_BaiViets", ThisKey="TaiKhoan", OtherKey="TaiKhoan")]
		public EntitySet<BaiViet> BaiViets
		{
			get
			{
				return this._BaiViets;
			}
			set
			{
				this._BaiViets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhVien_DonHang", Storage="_DonHangs", ThisKey="TaiKhoan", OtherKey="TaiKhoan")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhVien_NhanXet", Storage="_NhanXets", ThisKey="TaiKhoan", OtherKey="TaiKhoan")]
		public EntitySet<NhanXet> NhanXets
		{
			get
			{
				return this._NhanXets;
			}
			set
			{
				this._NhanXets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhVien_SanPham", Storage="_SanPhams", ThisKey="TaiKhoan", OtherKey="TaiKhoan")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomTK_ThanhVien", Storage="_NhomTK", ThisKey="MaNhom", OtherKey="MaNhom", IsForeignKey=true)]
		public NhomTK NhomTK
		{
			get
			{
				return this._NhomTK.Entity;
			}
			set
			{
				NhomTK previousValue = this._NhomTK.Entity;
				if (((previousValue != value) 
							|| (this._NhomTK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomTK.Entity = null;
						previousValue.ThanhViens.Remove(this);
					}
					this._NhomTK.Entity = value;
					if ((value != null))
					{
						value.ThanhViens.Add(this);
						this._MaNhom = value.MaNhom;
					}
					else
					{
						this._MaNhom = default(string);
					}
					this.SendPropertyChanged("NhomTK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiViets(BaiViet entity)
		{
			this.SendPropertyChanging();
			entity.ThanhVien = this;
		}
		
		private void detach_BaiViets(BaiViet entity)
		{
			this.SendPropertyChanging();
			entity.ThanhVien = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.ThanhVien = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.ThanhVien = null;
		}
		
		private void attach_NhanXets(NhanXet entity)
		{
			this.SendPropertyChanging();
			entity.ThanhVien = this;
		}
		
		private void detach_NhanXets(NhanXet entity)
		{
			this.SendPropertyChanging();
			entity.ThanhVien = null;
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThanhVien = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThanhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.The")]
	public partial class The : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThe;
		
		private string _TenThe;
		
		private string _GhiChu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnTenTheChanging(string value);
    partial void OnTenTheChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public The()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThe", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenThe
		{
			get
			{
				return this._TenThe;
			}
			set
			{
				if ((this._TenThe != value))
				{
					this.OnTenTheChanging(value);
					this.SendPropertyChanging();
					this._TenThe = value;
					this.SendPropertyChanged("TenThe");
					this.OnTenTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.The_BV")]
	public partial class The_BV
	{
		
		private string _MaThe;
		
		private string _MaBV;
		
		public The_BV()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this._MaThe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBV", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MaBV
		{
			get
			{
				return this._MaBV;
			}
			set
			{
				if ((this._MaBV != value))
				{
					this._MaBV = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.The_SP")]
	public partial class The_SP
	{
		
		private string _MaThe;
		
		private string _MaSP;
		
		public The_SP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this._MaThe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this._MaSP = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private string _GhiChu;
		
		private EntitySet<BaiViet> _BaiViets;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public TheLoai()
		{
			this._BaiViets = new EntitySet<BaiViet>(new Action<BaiViet>(this.attach_BaiViets), new Action<BaiViet>(this.detach_BaiViets));
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_BaiViet", Storage="_BaiViets", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<BaiViet> BaiViets
		{
			get
			{
				return this._BaiViets;
			}
			set
			{
				this._BaiViets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_SanPham", Storage="_SanPhams", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaiViets(BaiViet entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_BaiViets(BaiViet entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuongHieu")]
	public partial class ThuongHieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTH;
		
		private string _TenTH;
		
		private string _GhiChu;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTHChanging(string value);
    partial void OnMaTHChanged();
    partial void OnTenTHChanging(string value);
    partial void OnTenTHChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public ThuongHieu()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTH", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTH
		{
			get
			{
				return this._MaTH;
			}
			set
			{
				if ((this._MaTH != value))
				{
					this.OnMaTHChanging(value);
					this.SendPropertyChanging();
					this._MaTH = value;
					this.SendPropertyChanged("MaTH");
					this.OnMaTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTH", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenTH
		{
			get
			{
				return this._TenTH;
			}
			set
			{
				if ((this._TenTH != value))
				{
					this.OnTenTHChanging(value);
					this.SendPropertyChanging();
					this._TenTH = value;
					this.SendPropertyChanged("TenTH");
					this.OnTenTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_SanPhams", ThisKey="MaTH", OtherKey="MaTH")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieu = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHD")]
	public partial class CTHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoDH;
		
		private string _MaSP;
		
		private int _SoLuong;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoDHChanging(string value);
    partial void OnSoDHChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    #endregion
		
		public CTHD()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDH", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoDH
		{
			get
			{
				return this._SoDH;
			}
			set
			{
				if ((this._SoDH != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoDHChanging(value);
					this.SendPropertyChanging();
					this._SoDH = value;
					this.SendPropertyChanged("SoDH");
					this.OnSoDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_CTHD1", Storage="_DonHang", ThisKey="SoDH", OtherKey="SoDH", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._SoDH = value.SoDH;
					}
					else
					{
						this._SoDH = default(string);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CTHD1", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
